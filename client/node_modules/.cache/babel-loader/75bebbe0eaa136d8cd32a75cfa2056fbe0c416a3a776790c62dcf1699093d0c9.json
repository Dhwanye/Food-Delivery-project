{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Food Delivery project\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext.js';\nimport LoadingSpinner from './LoadingSpinner.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n  const location = useLocation();\n  if (loading) {\n    // Show loading spinner while auth state is being checked\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      message: \"Verifying authentication...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  if (!user) {\n    // Redirect to login page if user is not authenticated\n    // Save the current location they were trying to access\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If user is authenticated, render the child components\n  return children;\n};\n_s(ProtectedRoute, \"zPafkKLdz6KrRvMe2id3iDpNU34=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","LoadingSpinner","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","user","loading","location","message","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","_c","$RefreshReg$"],"sources":["C:/Users/HP/Food Delivery project/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext.js';\r\nimport LoadingSpinner from './LoadingSpinner.js';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { user, loading } = useAuth();\r\n  const location = useLocation();\r\n\r\n  if (loading) {\r\n    // Show loading spinner while auth state is being checked\r\n    return <LoadingSpinner message=\"Verifying authentication...\" />;\r\n  }\r\n\r\n  if (!user) {\r\n    // Redirect to login page if user is not authenticated\r\n    // Save the current location they were trying to access\r\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n  }\r\n\r\n  // If user is authenticated, render the child components\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,OAAOC,cAAc,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGR,OAAO,CAAC,CAAC;EACnC,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,IAAIS,OAAO,EAAE;IACX;IACA,oBAAOL,OAAA,CAACF,cAAc;MAACS,OAAO,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjE;EAEA,IAAI,CAACP,IAAI,EAAE;IACT;IACA;IACA,oBAAOJ,OAAA,CAACL,QAAQ;MAACiB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAER;MAAS,CAAE;MAACS,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,OAAOT,QAAQ;AACjB,CAAC;AAACC,EAAA,CAjBIF,cAAc;EAAA,QACQJ,OAAO,EAChBD,WAAW;AAAA;AAAAoB,EAAA,GAFxBf,cAAc;AAmBpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}