{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Food Delivery project\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = async (email, password) => {\n    try {\n      // Here you would typically make an API call to your backend\n      // For now, we'll simulate a successful login\n      const mockUser = {\n        id: 1,\n        name: 'Test User',\n        email: email\n      };\n      setUser(mockUser);\n      localStorage.setItem('user', JSON.stringify(mockUser));\n      return mockUser;\n    } catch (error) {\n      throw new Error('Login failed');\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  // Check for existing user session on load\n  React.useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const value = {\n    user,\n    login,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","login","email","password","mockUser","id","name","localStorage","setItem","JSON","stringify","error","Error","logout","removeItem","useEffect","storedUser","getItem","parse","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/HP/Food Delivery project/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  const login = async (email, password) => {\n    try {\n      // Here you would typically make an API call to your backend\n      // For now, we'll simulate a successful login\n      const mockUser = {\n        id: 1,\n        name: 'Test User',\n        email: email\n      };\n      \n      setUser(mockUser);\n      localStorage.setItem('user', JSON.stringify(mockUser));\n      return mockUser;\n    } catch (error) {\n      throw new Error('Login failed');\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  // Check for existing user session on load\n  React.useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  const value = {\n    user,\n    login,\n    logout,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMS,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF;MACA;MACA,MAAMC,QAAQ,GAAG;QACfC,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,WAAW;QACjBJ,KAAK,EAAEA;MACT,CAAC;MAEDF,OAAO,CAACI,QAAQ,CAAC;MACjBG,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAAC,CAAC;MACtD,OAAOA,QAAQ;IACjB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;IACjC;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBb,OAAO,CAAC,IAAI,CAAC;IACbO,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;;EAED;EACAzB,KAAK,CAAC0B,SAAS,CAAC,MAAM;IACpB,MAAMC,UAAU,GAAGT,YAAY,CAACU,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAID,UAAU,EAAE;MACdhB,OAAO,CAACS,IAAI,CAACS,KAAK,CAACF,UAAU,CAAC,CAAC;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAG;IACZpB,IAAI;IACJE,KAAK;IACLY,MAAM;IACNO,eAAe,EAAE,CAAC,CAACrB;EACrB,CAAC;EAED,oBACEL,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAtB,QAAA,EAChCA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3B,EAAA,CA9CWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAgDzB,OAAO,MAAM+B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGtC,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACkC,OAAO,EAAE;IACZ,MAAM,IAAIjB,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOiB,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}