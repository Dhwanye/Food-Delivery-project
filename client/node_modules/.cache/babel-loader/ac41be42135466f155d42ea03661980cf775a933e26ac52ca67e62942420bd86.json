{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Food Delivery project\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create a baseURL that can be easily changed for different environments\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Configure axios defaults\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load user from localStorage on mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      try {\n        setUser(JSON.parse(storedUser));\n      } catch (err) {\n        console.error('Failed to parse user data:', err);\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  // Save user to localStorage whenever it changes\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    }\n  }, [user]);\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // This is a mock implementation - in a real app, you'd call your API\n      // const response = await axios.post('/api/auth/login', { email, password });\n\n      // For demo purposes, we'll just create a mock user\n      const mockUser = {\n        id: 'usr123',\n        name: 'Aarchi Patel',\n        email: email || 'patel.aarchi.sanjay@gmail.com',\n        phone: '+91 98765 43210',\n        address: '42, Gopal Krishna Society, Athwa, Surat',\n        photo: null\n      };\n\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 800));\n      setUser(mockUser);\n      setLoading(false);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to login');\n      setLoading(false);\n      return {\n        success: false,\n        error: err.message\n      };\n    }\n  };\n  const socialLogin = async (provider, userData) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // In a real app, validate this with your backend\n      const user = {\n        id: userData.id || `usr_${Date.now()}`,\n        name: userData.name,\n        email: userData.email,\n        photo: userData.photoURL || null\n      };\n      setUser(user);\n      setLoading(false);\n      return {\n        success: true\n      };\n    } catch (err) {\n      setError('Social login failed');\n      setLoading(false);\n      return {\n        success: false,\n        error: err.message\n      };\n    }\n  };\n  const register = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      // This is a mock implementation - in a real app, you'd call your API\n      // const response = await axios.post('/api/auth/register', userData);\n\n      // For demo purposes, create a mock user\n      const mockUser = {\n        id: `usr_${Date.now()}`,\n        name: userData.name,\n        email: userData.email,\n        phone: userData.phone || '',\n        address: '',\n        photo: null\n      };\n\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 800));\n      setUser(mockUser);\n      setLoading(false);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Registration failed');\n      setLoading(false);\n      return {\n        success: false,\n        error: err.message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('cart');\n    setUser(null);\n  };\n  const updateProfile = async updatedData => {\n    setLoading(true);\n    setError(null);\n    try {\n      // In a real app, call your API to update the user profile\n      // const response = await axios.put('/api/users/profile', updatedData);\n\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 800));\n\n      // Update the user with the new data\n      const updatedUser = {\n        ...user,\n        ...updatedData\n      };\n      setUser(updatedUser);\n      setLoading(false);\n      return {\n        success: true\n      };\n    } catch (err) {\n      setError('Failed to update profile');\n      setLoading(false);\n      return {\n        success: false,\n        error: err.message\n      };\n    }\n  };\n  const fetchProfile = async () => {\n    if (!user) return {\n      success: false,\n      error: 'Not logged in'\n    };\n    setLoading(true);\n    setError(null);\n    try {\n      // In a real app, call your API to get the latest user data\n      // const response = await axios.get('/api/users/profile');\n\n      // Simulate API delay and return current user data\n      await new Promise(resolve => setTimeout(resolve, 500));\n      setLoading(false);\n      return {\n        success: true,\n        data: user\n      };\n    } catch (err) {\n      setError('Failed to fetch profile');\n      setLoading(false);\n      return {\n        success: false,\n        error: err.message\n      };\n    }\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    socialLogin,\n    register,\n    logout,\n    updateProfile,\n    fetchProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"7+yZn6J2c3ngGSY07PyfRn24fIE=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","setError","storedUser","JSON","parse","err","console","setItem","stringify","login","email","password","mockUser","id","name","phone","address","photo","resolve","setTimeout","success","_err$response","_err$response$data","response","data","message","socialLogin","provider","userData","Date","now","photoURL","register","_err$response2","_err$response2$data","logout","removeItem","updateProfile","updatedData","updatedUser","fetchProfile","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Food Delivery project/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create a baseURL that can be easily changed for different environments\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Configure axios defaults\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load user from localStorage on mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      try {\n        setUser(JSON.parse(storedUser));\n      } catch (err) {\n        console.error('Failed to parse user data:', err);\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  // Save user to localStorage whenever it changes\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    }\n  }, [user]);\n\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // This is a mock implementation - in a real app, you'd call your API\n      // const response = await axios.post('/api/auth/login', { email, password });\n      \n      // For demo purposes, we'll just create a mock user\n      const mockUser = {\n        id: 'usr123',\n        name: 'Aarchi Patel',\n        email: email || 'patel.aarchi.sanjay@gmail.com',\n        phone: '+91 98765 43210',\n        address: '42, Gopal Krishna Society, Athwa, Surat',\n        photo: null\n      };\n      \n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 800));\n      \n      setUser(mockUser);\n      setLoading(false);\n      return { success: true };\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to login');\n      setLoading(false);\n      return { success: false, error: err.message };\n    }\n  };\n\n  const socialLogin = async (provider, userData) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // In a real app, validate this with your backend\n      const user = {\n        id: userData.id || `usr_${Date.now()}`,\n        name: userData.name,\n        email: userData.email,\n        photo: userData.photoURL || null\n      };\n      \n      setUser(user);\n      setLoading(false);\n      return { success: true };\n    } catch (err) {\n      setError('Social login failed');\n      setLoading(false);\n      return { success: false, error: err.message };\n    }\n  };\n\n  const register = async (userData) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // This is a mock implementation - in a real app, you'd call your API\n      // const response = await axios.post('/api/auth/register', userData);\n      \n      // For demo purposes, create a mock user\n      const mockUser = {\n        id: `usr_${Date.now()}`,\n        name: userData.name,\n        email: userData.email,\n        phone: userData.phone || '',\n        address: '',\n        photo: null\n      };\n      \n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 800));\n      \n      setUser(mockUser);\n      setLoading(false);\n      return { success: true };\n    } catch (err) {\n      setError(err.response?.data?.message || 'Registration failed');\n      setLoading(false);\n      return { success: false, error: err.message };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('cart');\n    setUser(null);\n  };\n\n  const updateProfile = async (updatedData) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // In a real app, call your API to update the user profile\n      // const response = await axios.put('/api/users/profile', updatedData);\n      \n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 800));\n      \n      // Update the user with the new data\n      const updatedUser = { ...user, ...updatedData };\n      setUser(updatedUser);\n      \n      setLoading(false);\n      return { success: true };\n    } catch (err) {\n      setError('Failed to update profile');\n      setLoading(false);\n      return { success: false, error: err.message };\n    }\n  };\n\n  const fetchProfile = async () => {\n    if (!user) return { success: false, error: 'Not logged in' };\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      // In a real app, call your API to get the latest user data\n      // const response = await axios.get('/api/users/profile');\n      \n      // Simulate API delay and return current user data\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      setLoading(false);\n      return { success: true, data: user };\n    } catch (err) {\n      setError('Failed to fetch profile');\n      setLoading(false);\n      return { success: false, error: err.message };\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    socialLogin,\n    register,\n    logout,\n    updateProfile,\n    fetchProfile\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}