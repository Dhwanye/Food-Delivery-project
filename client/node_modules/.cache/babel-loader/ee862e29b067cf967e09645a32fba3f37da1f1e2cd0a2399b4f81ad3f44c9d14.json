{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Food Delivery project\\\\client\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(null);\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n\n  // Load cart from localStorage on mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      setCartItems(JSON.parse(savedCart));\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n  const addToCart = item => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(i => i._id === item._id);\n      if (existingItem) {\n        return prevItems.map(i => i._id === item._id ? {\n          ...i,\n          quantity: i.quantity + 1\n        } : i);\n      }\n      return [...prevItems, {\n        ...item,\n        quantity: 1\n      }];\n    });\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prevItems => prevItems.filter(item => item._id !== itemId));\n  };\n  const updateQuantity = (itemId, newQuantity) => {\n    if (newQuantity < 1) {\n      removeFromCart(itemId);\n      return;\n    }\n    setCartItems(prevItems => prevItems.map(item => item._id === itemId ? {\n      ...item,\n      quantity: newQuantity\n    } : item));\n  };\n  const clearCart = () => {\n    setCartItems([]);\n    localStorage.removeItem('cart');\n  };\n  const getCartItemCount = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n  const calculateTotal = () => {\n    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartItemCount,\n    calculateTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"jdONvkEabzLc64SbXgqXBHRMg9M=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","savedCart","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","item","prevItems","existingItem","find","i","_id","map","quantity","removeFromCart","itemId","filter","updateQuantity","newQuantity","clearCart","removeItem","getCartItemCount","reduce","total","calculateTotal","price","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/HP/Food Delivery project/client/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst CartContext = createContext(null);\n\nexport const CartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n\n  // Load cart from localStorage on mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      setCartItems(JSON.parse(savedCart));\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  const addToCart = (item) => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(i => i._id === item._id);\n      if (existingItem) {\n        return prevItems.map(i =>\n          i._id === item._id\n            ? { ...i, quantity: i.quantity + 1 }\n            : i\n        );\n      }\n      return [...prevItems, { ...item, quantity: 1 }];\n    });\n  };\n\n  const removeFromCart = (itemId) => {\n    setCartItems(prevItems => prevItems.filter(item => item._id !== itemId));\n  };\n\n  const updateQuantity = (itemId, newQuantity) => {\n    if (newQuantity < 1) {\n      removeFromCart(itemId);\n      return;\n    }\n    \n    setCartItems(prevItems =>\n      prevItems.map(item =>\n        item._id === itemId\n          ? { ...item, quantity: newQuantity }\n          : item\n      )\n    );\n  };\n\n  const clearCart = () => {\n    setCartItems([]);\n    localStorage.removeItem('cart');\n  };\n\n  const getCartItemCount = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  const calculateTotal = () => {\n    return cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\n  };\n\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartItemCount,\n    calculateTotal\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}