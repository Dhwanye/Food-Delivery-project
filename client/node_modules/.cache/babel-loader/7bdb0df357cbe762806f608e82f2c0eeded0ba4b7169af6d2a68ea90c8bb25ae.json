{"ast":null,"code":"var _jsxFileName = \"D:\\\\DHWANI\\\\PDEU\\\\SEM6\\\\AWT\\\\Food Delivery project\\\\client\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { FiMail, FiLock, FiUser, FiPhone, FiAlertCircle, FiMapPin, FiHome, FiX } from 'react-icons/fi';\nimport { useAuth } from '../context/AuthContext.js';\nimport './Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    register,\n    error: authError,\n    isAuthenticated\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    password: '',\n    confirmPassword: '',\n    address: {\n      street: '',\n      city: '',\n      state: '',\n      zipcode: '',\n      country: ''\n    }\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [registerSuccess, setRegisterSuccess] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [validationErrors, setValidationErrors] = useState({});\n  const formRef = useRef(null);\n\n  // Redirect if already logged in\n  useEffect(() => {\n    if (isAuthenticated) {\n      var _location$state, _location$state$from;\n      const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || '/';\n      navigate(from);\n    }\n  }, [isAuthenticated, navigate, location]);\n\n  // Update local error state when auth context error changes\n  useEffect(() => {\n    if (authError) {\n      // If we get an email exists error, don't show it at the top level\n      // but instead highlight the email field\n      if (authError.includes('Email address is already registered')) {\n        setValidationErrors(prev => ({\n          ...prev,\n          email: 'Email address is already registered'\n        }));\n        setFormData(prev => ({\n          ...prev,\n          password: '',\n          confirmPassword: ''\n        }));\n      } else if (!authError.includes('Username already taken')) {\n        // Don't display \"Username already taken\" error at all\n        setError(authError);\n      }\n    }\n  }, [authError]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Clear any validation errors for this field\n    if (validationErrors[name]) {\n      setValidationErrors(prev => {\n        const newErrors = {\n          ...prev\n        };\n        delete newErrors[name];\n        return newErrors;\n      });\n    }\n    if (name.includes('.')) {\n      // Handle nested address fields\n      const [parent, child] = name.split('.');\n      setFormData(prev => ({\n        ...prev,\n        [parent]: {\n          ...prev[parent],\n          [child]: value\n        }\n      }));\n\n      // Clear any validation errors for nested fields\n      if (validationErrors[`${parent}.${child}`]) {\n        setValidationErrors(prev => {\n          const newErrors = {\n            ...prev\n          };\n          delete newErrors[`${parent}.${child}`];\n          return newErrors;\n        });\n      }\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n\n    // Clear any errors when typing\n    setError('');\n  };\n  const validateForm = () => {\n    const errors = {};\n\n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!formData.email) {\n      errors.email = 'Email is required';\n    } else if (!emailRegex.test(formData.email)) {\n      errors.email = 'Please enter a valid email address';\n    }\n\n    // Name validation\n    if (!formData.name) {\n      errors.name = 'Full name is required';\n    } else if (formData.name.length < 2) {\n      errors.name = 'Name must be at least 2 characters';\n    }\n\n    // Password validation\n    if (!formData.password) {\n      errors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      errors.password = 'Password must be at least 6 characters';\n    }\n\n    // Confirm password\n    if (!formData.confirmPassword) {\n      errors.confirmPassword = 'Please confirm your password';\n    } else if (formData.password !== formData.confirmPassword) {\n      errors.confirmPassword = 'Passwords do not match';\n    }\n\n    // Mobile number validation (if provided)\n    if (formData.phone) {\n      const mobileRegex = /^[0-9]{10}$/;\n      if (!mobileRegex.test(formData.phone)) {\n        errors.mobile = 'Please enter a valid 10-digit mobile number';\n      }\n    }\n\n    // Address validation\n    if (!formData.address.street) {\n      errors['address.street'] = 'Street address is required';\n    }\n    if (!formData.address.city) {\n      errors['address.city'] = 'City is required';\n    }\n    if (!formData.address.state) {\n      errors['address.state'] = 'State is required';\n    }\n    if (!formData.address.zipcode) {\n      errors['address.zipcode'] = 'ZIP code is required';\n    } else {\n      const zipcodeRegex = /^[0-9]{5,6}$/;\n      if (!zipcodeRegex.test(formData.address.zipcode)) {\n        errors['address.zipcode'] = 'Please enter a valid zipcode (5-6 digits)';\n      }\n    }\n    if (!formData.address.country) {\n      errors['address.country'] = 'Country is required';\n    }\n    return errors;\n  };\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      email: '',\n      mobile: '',\n      password: '',\n      confirmPassword: '',\n      address: {\n        street: '',\n        city: '',\n        state: '',\n        zipcode: '',\n        country: ''\n      }\n    });\n    setError('');\n    setValidationErrors({});\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Clear any existing errors\n    setError('');\n\n    // Validate form\n    const formErrors = validateForm();\n    if (Object.keys(formErrors).length > 0) {\n      setValidationErrors(formErrors);\n\n      // Scroll to the first error field\n      const firstErrorField = Object.keys(formErrors)[0];\n      const element = document.getElementById(firstErrorField.includes('.') ? firstErrorField.split('.')[1] : firstErrorField);\n      if (element) {\n        element.scrollIntoView({\n          behavior: 'smooth',\n          block: 'center'\n        });\n        element.focus();\n      }\n      return;\n    }\n    setLoading(true);\n    setRegisterSuccess(false);\n    try {\n      // Call the register function from AuthContext\n      // await register({\n      //   name: formData.name,\n      //   email: formData.email,\n      //   mobile: formData.mobile,\n      //   password: formData.password,\n      //   address: formData.address\n      // });\n      await register({\n        name: formData.name,\n        email: formData.email,\n        phone: formData.phone,\n        password: formData.password,\n        street: formData.address.street,\n        city: formData.address.city,\n        state: formData.address.state,\n        zipcode: formData.address.zipcode,\n        country: formData.address.country\n      });\n\n      // Set success state\n      setRegisterSuccess(true);\n\n      // Clear form on success\n      resetForm();\n\n      // Navigation is handled by the useEffect hook watching isAuthenticated\n    } catch (error) {\n      console.error('Registration error:', error);\n\n      // Check if the error is related to email already existing\n      if (error.message && error.message.includes('Email address is already registered')) {\n        setValidationErrors(prev => ({\n          ...prev,\n          email: 'Email address is already registered'\n        }));\n\n        // Scroll to email field\n        const emailField = document.getElementById('email');\n        if (emailField) {\n          emailField.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center'\n          });\n          emailField.focus();\n        }\n      } else if (error.message && !error.message.includes('Username already taken')) {\n        // Filter out \"Username already taken\" error\n        setError(error.message || 'Registration failed. Please try again.');\n      } else {\n        // Set a generic error if it was the username error\n        setError('Registration failed. Please check your information and try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const togglePasswordVisibility = field => {\n    if (field === 'password') {\n      setShowPassword(!showPassword);\n    } else {\n      setShowConfirmPassword(!showConfirmPassword);\n    }\n  };\n  const clearError = () => {\n    setError('');\n  };\n  const getInputClassName = fieldName => {\n    return validationErrors[fieldName] ? 'input-group error' : 'input-group';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Join us for a delicious food journey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), registerSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: \"Account created successfully! Redirecting...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [/*#__PURE__*/_jsxDEV(FiAlertCircle, {\n            className: \"error-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), error, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-error-btn\",\n            onClick: clearError,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          ref: formRef,\n          onSubmit: handleSubmit,\n          className: \"auth-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Personal Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getInputClassName('name'),\n                children: [/*#__PURE__*/_jsxDEV(FiUser, {\n                  className: \"input-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"name\",\n                  name: \"name\",\n                  value: formData.name,\n                  onChange: handleChange,\n                  placeholder: \"Enter your full name\",\n                  disabled: loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), validationErrors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field-error\",\n                children: validationErrors.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getInputClassName('email'),\n                children: [/*#__PURE__*/_jsxDEV(FiMail, {\n                  className: \"input-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  id: \"email\",\n                  name: \"email\",\n                  value: formData.email,\n                  onChange: handleChange,\n                  placeholder: \"Enter your email\",\n                  disabled: loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this), validationErrors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field-error\",\n                children: validationErrors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"mobile\",\n                children: \"Phone Number (Optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getInputClassName('mobile'),\n                children: [/*#__PURE__*/_jsxDEV(FiPhone, {\n                  className: \"input-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"tel\",\n                  id: \"phone\",\n                  name: \"phone\",\n                  value: formData.phone,\n                  onChange: handleChange,\n                  placeholder: \"Enter your Phone number\",\n                  disabled: loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }, this), validationErrors.phone && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field-error\",\n                children: validationErrors.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getInputClassName('password'),\n                children: [/*#__PURE__*/_jsxDEV(FiLock, {\n                  className: \"input-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: showPassword ? \"text\" : \"password\",\n                  id: \"password\",\n                  name: \"password\",\n                  value: formData.password,\n                  onChange: handleChange,\n                  placeholder: \"Create a password\",\n                  disabled: loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"password-toggle\",\n                  onClick: () => togglePasswordVisibility('password'),\n                  children: showPassword ? \"Hide\" : \"Show\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this), validationErrors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field-error\",\n                children: validationErrors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confirmPassword\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getInputClassName('confirmPassword'),\n                children: [/*#__PURE__*/_jsxDEV(FiLock, {\n                  className: \"input-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: showConfirmPassword ? \"text\" : \"password\",\n                  id: \"confirmPassword\",\n                  name: \"confirmPassword\",\n                  value: formData.confirmPassword,\n                  onChange: handleChange,\n                  placeholder: \"Confirm your password\",\n                  disabled: loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"password-toggle\",\n                  onClick: () => togglePasswordVisibility('confirm'),\n                  children: showConfirmPassword ? \"Hide\" : \"Show\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this), validationErrors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field-error\",\n                children: validationErrors.confirmPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Delivery Address (Required)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"street\",\n                children: \"Street Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getInputClassName('address.street'),\n                children: [/*#__PURE__*/_jsxDEV(FiHome, {\n                  className: \"input-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"street\",\n                  name: \"address.street\",\n                  value: formData.address.street,\n                  onChange: handleChange,\n                  placeholder: \"Enter your street address\",\n                  disabled: loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 17\n              }, this), validationErrors['address.street'] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field-error\",\n                children: validationErrors['address.street']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"city\",\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: getInputClassName('address.city'),\n                  children: [/*#__PURE__*/_jsxDEV(FiMapPin, {\n                    className: \"input-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"city\",\n                    name: \"address.city\",\n                    value: formData.address.city,\n                    onChange: handleChange,\n                    placeholder: \"Enter your city\",\n                    disabled: loading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 19\n                }, this), validationErrors['address.city'] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"field-error\",\n                  children: validationErrors['address.city']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"state\",\n                  children: \"State\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: getInputClassName('address.state'),\n                  children: [/*#__PURE__*/_jsxDEV(FiMapPin, {\n                    className: \"input-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 474,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"state\",\n                    name: \"address.state\",\n                    value: formData.address.state,\n                    onChange: handleChange,\n                    placeholder: \"Enter your state\",\n                    disabled: loading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 19\n                }, this), validationErrors['address.state'] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"field-error\",\n                  children: validationErrors['address.state']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"zipcode\",\n                  children: \"ZIP Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: getInputClassName('address.zipcode'),\n                  children: [/*#__PURE__*/_jsxDEV(FiMapPin, {\n                    className: \"input-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"zipcode\",\n                    name: \"address.zipcode\",\n                    value: formData.address.zipcode,\n                    onChange: handleChange,\n                    placeholder: \"Enter ZIP code\",\n                    disabled: loading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 19\n                }, this), validationErrors['address.zipcode'] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"field-error\",\n                  children: validationErrors['address.zipcode']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"country\",\n                  children: \"Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: getInputClassName('address.country'),\n                  children: [/*#__PURE__*/_jsxDEV(FiMapPin, {\n                    className: \"input-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"country\",\n                    name: \"address.country\",\n                    value: formData.address.country,\n                    onChange: handleChange,\n                    placeholder: \"Enter your country\",\n                    disabled: loading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 19\n                }, this), validationErrors['address.country'] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"field-error\",\n                  children: validationErrors['address.country']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"auth-button primary-button\",\n            disabled: loading,\n            children: loading ? 'Creating Account...' : 'Create Account'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              className: \"auth-link\",\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"4GBgzM4atBo5TolRE2Qv+wrbXy0=\", false, function () {\n  return [useNavigate, useLocation, useAuth];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","useNavigate","useLocation","FiMail","FiLock","FiUser","FiPhone","FiAlertCircle","FiMapPin","FiHome","FiX","useAuth","jsxDEV","_jsxDEV","Register","_s","navigate","location","register","error","authError","isAuthenticated","formData","setFormData","name","email","phone","password","confirmPassword","address","street","city","state","zipcode","country","setError","loading","setLoading","registerSuccess","setRegisterSuccess","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","validationErrors","setValidationErrors","formRef","_location$state","_location$state$from","from","pathname","includes","prev","handleChange","e","value","target","newErrors","parent","child","split","validateForm","errors","emailRegex","test","length","mobileRegex","mobile","zipcodeRegex","resetForm","handleSubmit","preventDefault","formErrors","Object","keys","firstErrorField","element","document","getElementById","scrollIntoView","behavior","block","focus","console","message","emailField","togglePasswordVisibility","field","clearError","getInputClassName","fieldName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","onSubmit","htmlFor","type","id","onChange","placeholder","disabled","to","_c","$RefreshReg$"],"sources":["D:/DHWANI/PDEU/SEM6/AWT/Food Delivery project/client/src/pages/Register.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { FiMail, FiLock, FiUser, FiPhone, FiAlertCircle, FiMapPin, FiHome, FiX } from 'react-icons/fi';\nimport { useAuth } from '../context/AuthContext.js';\nimport './Register.css';\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { register, error: authError, isAuthenticated } = useAuth();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    password: '',\n    confirmPassword: '',\n    address: {\n      street: '',\n      city: '',\n      state: '',\n      zipcode: '',\n      country: ''\n    }\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [registerSuccess, setRegisterSuccess] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [validationErrors, setValidationErrors] = useState({});\n  const formRef = useRef(null);\n\n  // Redirect if already logged in\n  useEffect(() => {\n    if (isAuthenticated) {\n      const from = location.state?.from?.pathname || '/';\n      navigate(from);\n    }\n  }, [isAuthenticated, navigate, location]);\n\n  // Update local error state when auth context error changes\n  useEffect(() => {\n    if (authError) {\n      // If we get an email exists error, don't show it at the top level\n      // but instead highlight the email field\n      if (authError.includes('Email address is already registered')) {\n        setValidationErrors(prev => ({\n          ...prev,\n          email: 'Email address is already registered'\n        }));\n        setFormData(prev => ({\n          ...prev,\n          password: '',\n          confirmPassword: ''\n        }));\n      } else if (!authError.includes('Username already taken')) {\n        // Don't display \"Username already taken\" error at all\n        setError(authError);\n      }\n    }\n  }, [authError]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    \n    // Clear any validation errors for this field\n    if (validationErrors[name]) {\n      setValidationErrors(prev => {\n        const newErrors = {...prev};\n        delete newErrors[name];\n        return newErrors;\n      });\n    }\n    \n    if (name.includes('.')) {\n      // Handle nested address fields\n      const [parent, child] = name.split('.');\n      setFormData(prev => ({\n        ...prev,\n        [parent]: {\n          ...prev[parent],\n          [child]: value\n        }\n      }));\n      \n      // Clear any validation errors for nested fields\n      if (validationErrors[`${parent}.${child}`]) {\n        setValidationErrors(prev => {\n          const newErrors = {...prev};\n          delete newErrors[`${parent}.${child}`];\n          return newErrors;\n        });\n      }\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n    \n    // Clear any errors when typing\n    setError('');\n  };\n\n  const validateForm = () => {\n    const errors = {};\n    \n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!formData.email) {\n      errors.email = 'Email is required';\n    } else if (!emailRegex.test(formData.email)) {\n      errors.email = 'Please enter a valid email address';\n    }\n    \n    // Name validation\n    if (!formData.name) {\n      errors.name = 'Full name is required';\n    } else if (formData.name.length < 2) {\n      errors.name = 'Name must be at least 2 characters';\n    }\n    \n    // Password validation\n    if (!formData.password) {\n      errors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      errors.password = 'Password must be at least 6 characters';\n    }\n    \n    // Confirm password\n    if (!formData.confirmPassword) {\n      errors.confirmPassword = 'Please confirm your password';\n    } else if (formData.password !== formData.confirmPassword) {\n      errors.confirmPassword = 'Passwords do not match';\n    }\n    \n    // Mobile number validation (if provided)\n    if (formData.phone) {\n      const mobileRegex = /^[0-9]{10}$/;\n      if (!mobileRegex.test(formData.phone)) {\n        errors.mobile = 'Please enter a valid 10-digit mobile number';\n      }\n    }\n    \n    // Address validation\n    if (!formData.address.street) {\n      errors['address.street'] = 'Street address is required';\n    }\n    \n    if (!formData.address.city) {\n      errors['address.city'] = 'City is required';\n    }\n    \n    if (!formData.address.state) {\n      errors['address.state'] = 'State is required';\n    }\n    \n    if (!formData.address.zipcode) {\n      errors['address.zipcode'] = 'ZIP code is required';\n    } else {\n      const zipcodeRegex = /^[0-9]{5,6}$/;\n      if (!zipcodeRegex.test(formData.address.zipcode)) {\n        errors['address.zipcode'] = 'Please enter a valid zipcode (5-6 digits)';\n      }\n    }\n    \n    if (!formData.address.country) {\n      errors['address.country'] = 'Country is required';\n    }\n    \n    return errors;\n  };\n\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      email: '',\n      mobile: '',\n      password: '',\n      confirmPassword: '',\n      address: {\n        street: '',\n        city: '',\n        state: '',\n        zipcode: '',\n        country: ''\n      }\n    });\n    setError('');\n    setValidationErrors({});\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Clear any existing errors\n    setError('');\n    \n    // Validate form\n    const formErrors = validateForm();\n    if (Object.keys(formErrors).length > 0) {\n      setValidationErrors(formErrors);\n      \n      // Scroll to the first error field\n      const firstErrorField = Object.keys(formErrors)[0];\n      const element = document.getElementById(firstErrorField.includes('.') \n        ? firstErrorField.split('.')[1] \n        : firstErrorField);\n      \n      if (element) {\n        element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        element.focus();\n      }\n      \n      return;\n    }\n    \n    setLoading(true);\n    setRegisterSuccess(false);\n\n    try {\n      // Call the register function from AuthContext\n      // await register({\n      //   name: formData.name,\n      //   email: formData.email,\n      //   mobile: formData.mobile,\n      //   password: formData.password,\n      //   address: formData.address\n      // });\n      await register({\n        name: formData.name,\n        email: formData.email,\n        phone: formData.phone,\n        password: formData.password,\n        street: formData.address.street,\n        city: formData.address.city,\n        state: formData.address.state,\n        zipcode: formData.address.zipcode,\n        country: formData.address.country\n      });\n      \n      \n      // Set success state\n      setRegisterSuccess(true);\n      \n      // Clear form on success\n      resetForm();\n      \n      // Navigation is handled by the useEffect hook watching isAuthenticated\n    } catch (error) {\n      console.error('Registration error:', error);\n      \n      // Check if the error is related to email already existing\n      if (error.message && error.message.includes('Email address is already registered')) {\n        setValidationErrors(prev => ({\n          ...prev,\n          email: 'Email address is already registered'\n        }));\n        \n        // Scroll to email field\n        const emailField = document.getElementById('email');\n        if (emailField) {\n          emailField.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          emailField.focus();\n        }\n      } else if (error.message && !error.message.includes('Username already taken')) {\n        // Filter out \"Username already taken\" error\n        setError(error.message || 'Registration failed. Please try again.');\n      } else {\n        // Set a generic error if it was the username error\n        setError('Registration failed. Please check your information and try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const togglePasswordVisibility = (field) => {\n    if (field === 'password') {\n      setShowPassword(!showPassword);\n    } else {\n      setShowConfirmPassword(!showConfirmPassword);\n    }\n  };\n  \n  const clearError = () => {\n    setError('');\n  };\n\n  const getInputClassName = (fieldName) => {\n    return validationErrors[fieldName] ? 'input-group error' : 'input-group';\n  };\n\n  return (\n    <div className=\"auth-page\">\n      <div className=\"auth-container\">\n        <div className=\"auth-card\">\n          <div className=\"auth-header\">\n            <h1>Create Account</h1>\n            <p>Join us for a delicious food journey</p>\n          </div>\n\n          {registerSuccess && (\n            <div className=\"success-message\">\n              Account created successfully! Redirecting...\n            </div>\n          )}\n\n          {error && (\n            <div className=\"error-message\">\n              <FiAlertCircle className=\"error-icon\" />\n              {error}\n              <button className=\"clear-error-btn\" onClick={clearError}>×</button>\n            </div>\n          )}\n\n          <form ref={formRef} onSubmit={handleSubmit} className=\"auth-form\">\n            <div className=\"form-section\">\n              <h3>Personal Information</h3>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Full Name</label>\n                <div className={getInputClassName('name')}>\n                  <FiUser className=\"input-icon\" />\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleChange}\n                    placeholder=\"Enter your full name\"\n                    disabled={loading}\n                  />\n                </div>\n                {validationErrors.name && (\n                  <div className=\"field-error\">{validationErrors.name}</div>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email Address</label>\n                <div className={getInputClassName('email')}>\n                  <FiMail className=\"input-icon\" />\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    placeholder=\"Enter your email\"\n                    disabled={loading}\n                  />\n                </div>\n                {validationErrors.email && (\n                  <div className=\"field-error\">{validationErrors.email}</div>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"mobile\">Phone Number (Optional)</label>\n                <div className={getInputClassName('mobile')}>\n                  <FiPhone className=\"input-icon\" />\n                  <input\n                    type=\"tel\"\n                    id=\"phone\"\n                    name=\"phone\"\n                    value={formData.phone}\n                    onChange={handleChange}\n                    placeholder=\"Enter your Phone number\"\n                    disabled={loading}\n                  />\n                </div>\n                {validationErrors.phone && (\n                  <div className=\"field-error\">{validationErrors.phone}</div>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <div className={getInputClassName('password')}>\n                  <FiLock className=\"input-icon\" />\n                  <input\n                    type={showPassword ? \"text\" : \"password\"}\n                    id=\"password\"\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                    placeholder=\"Create a password\"\n                    disabled={loading}\n                  />\n                  <button \n                    type=\"button\" \n                    className=\"password-toggle\"\n                    onClick={() => togglePasswordVisibility('password')}\n                  >\n                    {showPassword ? \"Hide\" : \"Show\"}\n                  </button>\n                </div>\n                {validationErrors.password && (\n                  <div className=\"field-error\">{validationErrors.password}</div>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                <div className={getInputClassName('confirmPassword')}>\n                  <FiLock className=\"input-icon\" />\n                  <input\n                    type={showConfirmPassword ? \"text\" : \"password\"}\n                    id=\"confirmPassword\"\n                    name=\"confirmPassword\"\n                    value={formData.confirmPassword}\n                    onChange={handleChange}\n                    placeholder=\"Confirm your password\"\n                    disabled={loading}\n                  />\n                  <button \n                    type=\"button\" \n                    className=\"password-toggle\"\n                    onClick={() => togglePasswordVisibility('confirm')}\n                  >\n                    {showConfirmPassword ? \"Hide\" : \"Show\"}\n                  </button>\n                </div>\n                {validationErrors.confirmPassword && (\n                  <div className=\"field-error\">{validationErrors.confirmPassword}</div>\n                )}\n              </div>\n            </div>\n            \n            <div className=\"form-section\">\n              <h3>Delivery Address (Required)</h3>\n              <div className=\"form-group\">\n                <label htmlFor=\"street\">Street Address</label>\n                <div className={getInputClassName('address.street')}>\n                  <FiHome className=\"input-icon\" />\n                  <input\n                    type=\"text\"\n                    id=\"street\"\n                    name=\"address.street\"\n                    value={formData.address.street}\n                    onChange={handleChange}\n                    placeholder=\"Enter your street address\"\n                    disabled={loading}\n                  />\n                </div>\n                {validationErrors['address.street'] && (\n                  <div className=\"field-error\">{validationErrors['address.street']}</div>\n                )}\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"city\">City</label>\n                  <div className={getInputClassName('address.city')}>\n                    <FiMapPin className=\"input-icon\" />\n                    <input\n                      type=\"text\"\n                      id=\"city\"\n                      name=\"address.city\"\n                      value={formData.address.city}\n                      onChange={handleChange}\n                      placeholder=\"Enter your city\"\n                      disabled={loading}\n                    />\n                  </div>\n                  {validationErrors['address.city'] && (\n                    <div className=\"field-error\">{validationErrors['address.city']}</div>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"state\">State</label>\n                  <div className={getInputClassName('address.state')}>\n                    <FiMapPin className=\"input-icon\" />\n                    <input\n                      type=\"text\"\n                      id=\"state\"\n                      name=\"address.state\"\n                      value={formData.address.state}\n                      onChange={handleChange}\n                      placeholder=\"Enter your state\"\n                      disabled={loading}\n                    />\n                  </div>\n                  {validationErrors['address.state'] && (\n                    <div className=\"field-error\">{validationErrors['address.state']}</div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"zipcode\">ZIP Code</label>\n                  <div className={getInputClassName('address.zipcode')}>\n                    <FiMapPin className=\"input-icon\" />\n                    <input\n                      type=\"text\"\n                      id=\"zipcode\"\n                      name=\"address.zipcode\"\n                      value={formData.address.zipcode}\n                      onChange={handleChange}\n                      placeholder=\"Enter ZIP code\"\n                      disabled={loading}\n                    />\n                  </div>\n                  {validationErrors['address.zipcode'] && (\n                    <div className=\"field-error\">{validationErrors['address.zipcode']}</div>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"country\">Country</label>\n                  <div className={getInputClassName('address.country')}>\n                    <FiMapPin className=\"input-icon\" />\n                    <input\n                      type=\"text\"\n                      id=\"country\"\n                      name=\"address.country\"\n                      value={formData.address.country}\n                      onChange={handleChange}\n                      placeholder=\"Enter your country\"\n                      disabled={loading}\n                    />\n                  </div>\n                  {validationErrors['address.country'] && (\n                    <div className=\"field-error\">{validationErrors['address.country']}</div>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <button \n              type=\"submit\" \n              className=\"auth-button primary-button\"\n              disabled={loading}\n            >\n              {loading ? 'Creating Account...' : 'Create Account'}\n            </button>\n          </form>\n\n          <div className=\"auth-footer\">\n            <p>Already have an account? <Link to=\"/login\" className=\"auth-link\">Sign In</Link></p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACjE,SAASC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;AACtG,SAASC,OAAO,QAAQ,2BAA2B;AACnD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEgB,QAAQ;IAAEC,KAAK,EAAEC,SAAS;IAAEC;EAAgB,CAAC,GAAGV,OAAO,CAAC,CAAC;EACjE,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC;IACvC2B,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE,EAAE;IACnBC,OAAO,EAAE;MACPC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;IACX;EACF,CAAC,CAAC;EACF,MAAM,CAACf,KAAK,EAAEgB,QAAQ,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuC,OAAO,EAAEC,UAAU,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyC,eAAe,EAAEC,kBAAkB,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC2C,YAAY,EAAEC,eAAe,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC6C,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC+C,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhD,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAMiD,OAAO,GAAG/C,MAAM,CAAC,IAAI,CAAC;;EAE5B;EACAD,SAAS,CAAC,MAAM;IACd,IAAIuB,eAAe,EAAE;MAAA,IAAA0B,eAAA,EAAAC,oBAAA;MACnB,MAAMC,IAAI,GAAG,EAAAF,eAAA,GAAA9B,QAAQ,CAACe,KAAK,cAAAe,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBE,IAAI,cAAAD,oBAAA,uBAApBA,oBAAA,CAAsBE,QAAQ,KAAI,GAAG;MAClDlC,QAAQ,CAACiC,IAAI,CAAC;IAChB;EACF,CAAC,EAAE,CAAC5B,eAAe,EAAEL,QAAQ,EAAEC,QAAQ,CAAC,CAAC;;EAEzC;EACAnB,SAAS,CAAC,MAAM;IACd,IAAIsB,SAAS,EAAE;MACb;MACA;MACA,IAAIA,SAAS,CAAC+B,QAAQ,CAAC,qCAAqC,CAAC,EAAE;QAC7DN,mBAAmB,CAACO,IAAI,KAAK;UAC3B,GAAGA,IAAI;UACP3B,KAAK,EAAE;QACT,CAAC,CAAC,CAAC;QACHF,WAAW,CAAC6B,IAAI,KAAK;UACnB,GAAGA,IAAI;UACPzB,QAAQ,EAAE,EAAE;UACZC,eAAe,EAAE;QACnB,CAAC,CAAC,CAAC;MACL,CAAC,MAAM,IAAI,CAACR,SAAS,CAAC+B,QAAQ,CAAC,wBAAwB,CAAC,EAAE;QACxD;QACAhB,QAAQ,CAACf,SAAS,CAAC;MACrB;IACF;EACF,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMiC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAE9B,IAAI;MAAE+B;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;;IAEhC;IACA,IAAIZ,gBAAgB,CAACpB,IAAI,CAAC,EAAE;MAC1BqB,mBAAmB,CAACO,IAAI,IAAI;QAC1B,MAAMK,SAAS,GAAG;UAAC,GAAGL;QAAI,CAAC;QAC3B,OAAOK,SAAS,CAACjC,IAAI,CAAC;QACtB,OAAOiC,SAAS;MAClB,CAAC,CAAC;IACJ;IAEA,IAAIjC,IAAI,CAAC2B,QAAQ,CAAC,GAAG,CAAC,EAAE;MACtB;MACA,MAAM,CAACO,MAAM,EAAEC,KAAK,CAAC,GAAGnC,IAAI,CAACoC,KAAK,CAAC,GAAG,CAAC;MACvCrC,WAAW,CAAC6B,IAAI,KAAK;QACnB,GAAGA,IAAI;QACP,CAACM,MAAM,GAAG;UACR,GAAGN,IAAI,CAACM,MAAM,CAAC;UACf,CAACC,KAAK,GAAGJ;QACX;MACF,CAAC,CAAC,CAAC;;MAEH;MACA,IAAIX,gBAAgB,CAAC,GAAGc,MAAM,IAAIC,KAAK,EAAE,CAAC,EAAE;QAC1Cd,mBAAmB,CAACO,IAAI,IAAI;UAC1B,MAAMK,SAAS,GAAG;YAAC,GAAGL;UAAI,CAAC;UAC3B,OAAOK,SAAS,CAAC,GAAGC,MAAM,IAAIC,KAAK,EAAE,CAAC;UACtC,OAAOF,SAAS;QAClB,CAAC,CAAC;MACJ;IACF,CAAC,MAAM;MACLlC,WAAW,CAAC6B,IAAI,KAAK;QACnB,GAAGA,IAAI;QACP,CAAC5B,IAAI,GAAG+B;MACV,CAAC,CAAC,CAAC;IACL;;IAEA;IACApB,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAM0B,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,MAAM,GAAG,CAAC,CAAC;;IAEjB;IACA,MAAMC,UAAU,GAAG,4BAA4B;IAC/C,IAAI,CAACzC,QAAQ,CAACG,KAAK,EAAE;MACnBqC,MAAM,CAACrC,KAAK,GAAG,mBAAmB;IACpC,CAAC,MAAM,IAAI,CAACsC,UAAU,CAACC,IAAI,CAAC1C,QAAQ,CAACG,KAAK,CAAC,EAAE;MAC3CqC,MAAM,CAACrC,KAAK,GAAG,oCAAoC;IACrD;;IAEA;IACA,IAAI,CAACH,QAAQ,CAACE,IAAI,EAAE;MAClBsC,MAAM,CAACtC,IAAI,GAAG,uBAAuB;IACvC,CAAC,MAAM,IAAIF,QAAQ,CAACE,IAAI,CAACyC,MAAM,GAAG,CAAC,EAAE;MACnCH,MAAM,CAACtC,IAAI,GAAG,oCAAoC;IACpD;;IAEA;IACA,IAAI,CAACF,QAAQ,CAACK,QAAQ,EAAE;MACtBmC,MAAM,CAACnC,QAAQ,GAAG,sBAAsB;IAC1C,CAAC,MAAM,IAAIL,QAAQ,CAACK,QAAQ,CAACsC,MAAM,GAAG,CAAC,EAAE;MACvCH,MAAM,CAACnC,QAAQ,GAAG,wCAAwC;IAC5D;;IAEA;IACA,IAAI,CAACL,QAAQ,CAACM,eAAe,EAAE;MAC7BkC,MAAM,CAAClC,eAAe,GAAG,8BAA8B;IACzD,CAAC,MAAM,IAAIN,QAAQ,CAACK,QAAQ,KAAKL,QAAQ,CAACM,eAAe,EAAE;MACzDkC,MAAM,CAAClC,eAAe,GAAG,wBAAwB;IACnD;;IAEA;IACA,IAAIN,QAAQ,CAACI,KAAK,EAAE;MAClB,MAAMwC,WAAW,GAAG,aAAa;MACjC,IAAI,CAACA,WAAW,CAACF,IAAI,CAAC1C,QAAQ,CAACI,KAAK,CAAC,EAAE;QACrCoC,MAAM,CAACK,MAAM,GAAG,6CAA6C;MAC/D;IACF;;IAEA;IACA,IAAI,CAAC7C,QAAQ,CAACO,OAAO,CAACC,MAAM,EAAE;MAC5BgC,MAAM,CAAC,gBAAgB,CAAC,GAAG,4BAA4B;IACzD;IAEA,IAAI,CAACxC,QAAQ,CAACO,OAAO,CAACE,IAAI,EAAE;MAC1B+B,MAAM,CAAC,cAAc,CAAC,GAAG,kBAAkB;IAC7C;IAEA,IAAI,CAACxC,QAAQ,CAACO,OAAO,CAACG,KAAK,EAAE;MAC3B8B,MAAM,CAAC,eAAe,CAAC,GAAG,mBAAmB;IAC/C;IAEA,IAAI,CAACxC,QAAQ,CAACO,OAAO,CAACI,OAAO,EAAE;MAC7B6B,MAAM,CAAC,iBAAiB,CAAC,GAAG,sBAAsB;IACpD,CAAC,MAAM;MACL,MAAMM,YAAY,GAAG,cAAc;MACnC,IAAI,CAACA,YAAY,CAACJ,IAAI,CAAC1C,QAAQ,CAACO,OAAO,CAACI,OAAO,CAAC,EAAE;QAChD6B,MAAM,CAAC,iBAAiB,CAAC,GAAG,2CAA2C;MACzE;IACF;IAEA,IAAI,CAACxC,QAAQ,CAACO,OAAO,CAACK,OAAO,EAAE;MAC7B4B,MAAM,CAAC,iBAAiB,CAAC,GAAG,qBAAqB;IACnD;IAEA,OAAOA,MAAM;EACf,CAAC;EAED,MAAMO,SAAS,GAAGA,CAAA,KAAM;IACtB9C,WAAW,CAAC;MACVC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACT0C,MAAM,EAAE,EAAE;MACVxC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,OAAO,EAAE;QACPC,MAAM,EAAE,EAAE;QACVC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE;MACX;IACF,CAAC,CAAC;IACFC,QAAQ,CAAC,EAAE,CAAC;IACZU,mBAAmB,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,MAAMyB,YAAY,GAAG,MAAOhB,CAAC,IAAK;IAChCA,CAAC,CAACiB,cAAc,CAAC,CAAC;;IAElB;IACApC,QAAQ,CAAC,EAAE,CAAC;;IAEZ;IACA,MAAMqC,UAAU,GAAGX,YAAY,CAAC,CAAC;IACjC,IAAIY,MAAM,CAACC,IAAI,CAACF,UAAU,CAAC,CAACP,MAAM,GAAG,CAAC,EAAE;MACtCpB,mBAAmB,CAAC2B,UAAU,CAAC;;MAE/B;MACA,MAAMG,eAAe,GAAGF,MAAM,CAACC,IAAI,CAACF,UAAU,CAAC,CAAC,CAAC,CAAC;MAClD,MAAMI,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAACH,eAAe,CAACxB,QAAQ,CAAC,GAAG,CAAC,GACjEwB,eAAe,CAACf,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAC7Be,eAAe,CAAC;MAEpB,IAAIC,OAAO,EAAE;QACXA,OAAO,CAACG,cAAc,CAAC;UAAEC,QAAQ,EAAE,QAAQ;UAAEC,KAAK,EAAE;QAAS,CAAC,CAAC;QAC/DL,OAAO,CAACM,KAAK,CAAC,CAAC;MACjB;MAEA;IACF;IAEA7C,UAAU,CAAC,IAAI,CAAC;IAChBE,kBAAkB,CAAC,KAAK,CAAC;IAEzB,IAAI;MACF;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,MAAMrB,QAAQ,CAAC;QACbM,IAAI,EAAEF,QAAQ,CAACE,IAAI;QACnBC,KAAK,EAAEH,QAAQ,CAACG,KAAK;QACrBC,KAAK,EAAEJ,QAAQ,CAACI,KAAK;QACrBC,QAAQ,EAAEL,QAAQ,CAACK,QAAQ;QAC3BG,MAAM,EAAER,QAAQ,CAACO,OAAO,CAACC,MAAM;QAC/BC,IAAI,EAAET,QAAQ,CAACO,OAAO,CAACE,IAAI;QAC3BC,KAAK,EAAEV,QAAQ,CAACO,OAAO,CAACG,KAAK;QAC7BC,OAAO,EAAEX,QAAQ,CAACO,OAAO,CAACI,OAAO;QACjCC,OAAO,EAAEZ,QAAQ,CAACO,OAAO,CAACK;MAC5B,CAAC,CAAC;;MAGF;MACAK,kBAAkB,CAAC,IAAI,CAAC;;MAExB;MACA8B,SAAS,CAAC,CAAC;;MAEX;IACF,CAAC,CAAC,OAAOlD,KAAK,EAAE;MACdgE,OAAO,CAAChE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;;MAE3C;MACA,IAAIA,KAAK,CAACiE,OAAO,IAAIjE,KAAK,CAACiE,OAAO,CAACjC,QAAQ,CAAC,qCAAqC,CAAC,EAAE;QAClFN,mBAAmB,CAACO,IAAI,KAAK;UAC3B,GAAGA,IAAI;UACP3B,KAAK,EAAE;QACT,CAAC,CAAC,CAAC;;QAEH;QACA,MAAM4D,UAAU,GAAGR,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;QACnD,IAAIO,UAAU,EAAE;UACdA,UAAU,CAACN,cAAc,CAAC;YAAEC,QAAQ,EAAE,QAAQ;YAAEC,KAAK,EAAE;UAAS,CAAC,CAAC;UAClEI,UAAU,CAACH,KAAK,CAAC,CAAC;QACpB;MACF,CAAC,MAAM,IAAI/D,KAAK,CAACiE,OAAO,IAAI,CAACjE,KAAK,CAACiE,OAAO,CAACjC,QAAQ,CAAC,wBAAwB,CAAC,EAAE;QAC7E;QACAhB,QAAQ,CAAChB,KAAK,CAACiE,OAAO,IAAI,wCAAwC,CAAC;MACrE,CAAC,MAAM;QACL;QACAjD,QAAQ,CAAC,mEAAmE,CAAC;MAC/E;IACF,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMiD,wBAAwB,GAAIC,KAAK,IAAK;IAC1C,IAAIA,KAAK,KAAK,UAAU,EAAE;MACxB9C,eAAe,CAAC,CAACD,YAAY,CAAC;IAChC,CAAC,MAAM;MACLG,sBAAsB,CAAC,CAACD,mBAAmB,CAAC;IAC9C;EACF,CAAC;EAED,MAAM8C,UAAU,GAAGA,CAAA,KAAM;IACvBrD,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMsD,iBAAiB,GAAIC,SAAS,IAAK;IACvC,OAAO9C,gBAAgB,CAAC8C,SAAS,CAAC,GAAG,mBAAmB,GAAG,aAAa;EAC1E,CAAC;EAED,oBACE7E,OAAA;IAAK8E,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxB/E,OAAA;MAAK8E,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7B/E,OAAA;QAAK8E,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB/E,OAAA;UAAK8E,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B/E,OAAA;YAAA+E,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvBnF,OAAA;YAAA+E,QAAA,EAAG;UAAoC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,EAEL1D,eAAe,iBACdzB,OAAA;UAAK8E,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAEjC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACN,EAEA7E,KAAK,iBACJN,OAAA;UAAK8E,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B/E,OAAA,CAACN,aAAa;YAACoF,SAAS,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACvC7E,KAAK,eACNN,OAAA;YAAQ8E,SAAS,EAAC,iBAAiB;YAACM,OAAO,EAAET,UAAW;YAAAI,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CACN,eAEDnF,OAAA;UAAMqF,GAAG,EAAEpD,OAAQ;UAACqD,QAAQ,EAAE7B,YAAa;UAACqB,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAC/D/E,OAAA;YAAK8E,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B/E,OAAA;cAAA+E,QAAA,EAAI;YAAoB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7BnF,OAAA;cAAK8E,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzB/E,OAAA;gBAAOuF,OAAO,EAAC,MAAM;gBAAAR,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACvCnF,OAAA;gBAAK8E,SAAS,EAAEF,iBAAiB,CAAC,MAAM,CAAE;gBAAAG,QAAA,gBACxC/E,OAAA,CAACR,MAAM;kBAACsF,SAAS,EAAC;gBAAY;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACjCnF,OAAA;kBACEwF,IAAI,EAAC,MAAM;kBACXC,EAAE,EAAC,MAAM;kBACT9E,IAAI,EAAC,MAAM;kBACX+B,KAAK,EAAEjC,QAAQ,CAACE,IAAK;kBACrB+E,QAAQ,EAAElD,YAAa;kBACvBmD,WAAW,EAAC,sBAAsB;kBAClCC,QAAQ,EAAErE;gBAAQ;kBAAAyD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,EACLpD,gBAAgB,CAACpB,IAAI,iBACpBX,OAAA;gBAAK8E,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAEhD,gBAAgB,CAACpB;cAAI;gBAAAqE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAC1D;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAENnF,OAAA;cAAK8E,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzB/E,OAAA;gBAAOuF,OAAO,EAAC,OAAO;gBAAAR,QAAA,EAAC;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC5CnF,OAAA;gBAAK8E,SAAS,EAAEF,iBAAiB,CAAC,OAAO,CAAE;gBAAAG,QAAA,gBACzC/E,OAAA,CAACV,MAAM;kBAACwF,SAAS,EAAC;gBAAY;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACjCnF,OAAA;kBACEwF,IAAI,EAAC,OAAO;kBACZC,EAAE,EAAC,OAAO;kBACV9E,IAAI,EAAC,OAAO;kBACZ+B,KAAK,EAAEjC,QAAQ,CAACG,KAAM;kBACtB8E,QAAQ,EAAElD,YAAa;kBACvBmD,WAAW,EAAC,kBAAkB;kBAC9BC,QAAQ,EAAErE;gBAAQ;kBAAAyD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,EACLpD,gBAAgB,CAACnB,KAAK,iBACrBZ,OAAA;gBAAK8E,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAEhD,gBAAgB,CAACnB;cAAK;gBAAAoE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAC3D;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAENnF,OAAA;cAAK8E,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzB/E,OAAA;gBAAOuF,OAAO,EAAC,QAAQ;gBAAAR,QAAA,EAAC;cAAuB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACvDnF,OAAA;gBAAK8E,SAAS,EAAEF,iBAAiB,CAAC,QAAQ,CAAE;gBAAAG,QAAA,gBAC1C/E,OAAA,CAACP,OAAO;kBAACqF,SAAS,EAAC;gBAAY;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAClCnF,OAAA;kBACEwF,IAAI,EAAC,KAAK;kBACVC,EAAE,EAAC,OAAO;kBACV9E,IAAI,EAAC,OAAO;kBACZ+B,KAAK,EAAEjC,QAAQ,CAACI,KAAM;kBACtB6E,QAAQ,EAAElD,YAAa;kBACvBmD,WAAW,EAAC,yBAAyB;kBACrCC,QAAQ,EAAErE;gBAAQ;kBAAAyD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,EACLpD,gBAAgB,CAAClB,KAAK,iBACrBb,OAAA;gBAAK8E,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAEhD,gBAAgB,CAAClB;cAAK;gBAAAmE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAC3D;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAENnF,OAAA;cAAK8E,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzB/E,OAAA;gBAAOuF,OAAO,EAAC,UAAU;gBAAAR,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC1CnF,OAAA;gBAAK8E,SAAS,EAAEF,iBAAiB,CAAC,UAAU,CAAE;gBAAAG,QAAA,gBAC5C/E,OAAA,CAACT,MAAM;kBAACuF,SAAS,EAAC;gBAAY;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACjCnF,OAAA;kBACEwF,IAAI,EAAE7D,YAAY,GAAG,MAAM,GAAG,UAAW;kBACzC8D,EAAE,EAAC,UAAU;kBACb9E,IAAI,EAAC,UAAU;kBACf+B,KAAK,EAAEjC,QAAQ,CAACK,QAAS;kBACzB4E,QAAQ,EAAElD,YAAa;kBACvBmD,WAAW,EAAC,mBAAmB;kBAC/BC,QAAQ,EAAErE;gBAAQ;kBAAAyD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnB,CAAC,eACFnF,OAAA;kBACEwF,IAAI,EAAC,QAAQ;kBACbV,SAAS,EAAC,iBAAiB;kBAC3BM,OAAO,EAAEA,CAAA,KAAMX,wBAAwB,CAAC,UAAU,CAAE;kBAAAM,QAAA,EAEnDpD,YAAY,GAAG,MAAM,GAAG;gBAAM;kBAAAqD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,EACLpD,gBAAgB,CAACjB,QAAQ,iBACxBd,OAAA;gBAAK8E,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAEhD,gBAAgB,CAACjB;cAAQ;gBAAAkE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAC9D;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAENnF,OAAA;cAAK8E,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzB/E,OAAA;gBAAOuF,OAAO,EAAC,iBAAiB;gBAAAR,QAAA,EAAC;cAAgB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACzDnF,OAAA;gBAAK8E,SAAS,EAAEF,iBAAiB,CAAC,iBAAiB,CAAE;gBAAAG,QAAA,gBACnD/E,OAAA,CAACT,MAAM;kBAACuF,SAAS,EAAC;gBAAY;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACjCnF,OAAA;kBACEwF,IAAI,EAAE3D,mBAAmB,GAAG,MAAM,GAAG,UAAW;kBAChD4D,EAAE,EAAC,iBAAiB;kBACpB9E,IAAI,EAAC,iBAAiB;kBACtB+B,KAAK,EAAEjC,QAAQ,CAACM,eAAgB;kBAChC2E,QAAQ,EAAElD,YAAa;kBACvBmD,WAAW,EAAC,uBAAuB;kBACnCC,QAAQ,EAAErE;gBAAQ;kBAAAyD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnB,CAAC,eACFnF,OAAA;kBACEwF,IAAI,EAAC,QAAQ;kBACbV,SAAS,EAAC,iBAAiB;kBAC3BM,OAAO,EAAEA,CAAA,KAAMX,wBAAwB,CAAC,SAAS,CAAE;kBAAAM,QAAA,EAElDlD,mBAAmB,GAAG,MAAM,GAAG;gBAAM;kBAAAmD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,EACLpD,gBAAgB,CAAChB,eAAe,iBAC/Bf,OAAA;gBAAK8E,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAEhD,gBAAgB,CAAChB;cAAe;gBAAAiE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CACrE;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENnF,OAAA;YAAK8E,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B/E,OAAA;cAAA+E,QAAA,EAAI;YAA2B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpCnF,OAAA;cAAK8E,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzB/E,OAAA;gBAAOuF,OAAO,EAAC,QAAQ;gBAAAR,QAAA,EAAC;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC9CnF,OAAA;gBAAK8E,SAAS,EAAEF,iBAAiB,CAAC,gBAAgB,CAAE;gBAAAG,QAAA,gBAClD/E,OAAA,CAACJ,MAAM;kBAACkF,SAAS,EAAC;gBAAY;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACjCnF,OAAA;kBACEwF,IAAI,EAAC,MAAM;kBACXC,EAAE,EAAC,QAAQ;kBACX9E,IAAI,EAAC,gBAAgB;kBACrB+B,KAAK,EAAEjC,QAAQ,CAACO,OAAO,CAACC,MAAO;kBAC/ByE,QAAQ,EAAElD,YAAa;kBACvBmD,WAAW,EAAC,2BAA2B;kBACvCC,QAAQ,EAAErE;gBAAQ;kBAAAyD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,EACLpD,gBAAgB,CAAC,gBAAgB,CAAC,iBACjC/B,OAAA;gBAAK8E,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAEhD,gBAAgB,CAAC,gBAAgB;cAAC;gBAAAiD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CACvE;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAENnF,OAAA;cAAK8E,SAAS,EAAC,UAAU;cAAAC,QAAA,gBACvB/E,OAAA;gBAAK8E,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzB/E,OAAA;kBAAOuF,OAAO,EAAC,MAAM;kBAAAR,QAAA,EAAC;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAClCnF,OAAA;kBAAK8E,SAAS,EAAEF,iBAAiB,CAAC,cAAc,CAAE;kBAAAG,QAAA,gBAChD/E,OAAA,CAACL,QAAQ;oBAACmF,SAAS,EAAC;kBAAY;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACnCnF,OAAA;oBACEwF,IAAI,EAAC,MAAM;oBACXC,EAAE,EAAC,MAAM;oBACT9E,IAAI,EAAC,cAAc;oBACnB+B,KAAK,EAAEjC,QAAQ,CAACO,OAAO,CAACE,IAAK;oBAC7BwE,QAAQ,EAAElD,YAAa;oBACvBmD,WAAW,EAAC,iBAAiB;oBAC7BC,QAAQ,EAAErE;kBAAQ;oBAAAyD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,EACLpD,gBAAgB,CAAC,cAAc,CAAC,iBAC/B/B,OAAA;kBAAK8E,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAEhD,gBAAgB,CAAC,cAAc;gBAAC;kBAAAiD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CACrE;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eAENnF,OAAA;gBAAK8E,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzB/E,OAAA;kBAAOuF,OAAO,EAAC,OAAO;kBAAAR,QAAA,EAAC;gBAAK;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACpCnF,OAAA;kBAAK8E,SAAS,EAAEF,iBAAiB,CAAC,eAAe,CAAE;kBAAAG,QAAA,gBACjD/E,OAAA,CAACL,QAAQ;oBAACmF,SAAS,EAAC;kBAAY;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACnCnF,OAAA;oBACEwF,IAAI,EAAC,MAAM;oBACXC,EAAE,EAAC,OAAO;oBACV9E,IAAI,EAAC,eAAe;oBACpB+B,KAAK,EAAEjC,QAAQ,CAACO,OAAO,CAACG,KAAM;oBAC9BuE,QAAQ,EAAElD,YAAa;oBACvBmD,WAAW,EAAC,kBAAkB;oBAC9BC,QAAQ,EAAErE;kBAAQ;oBAAAyD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,EACLpD,gBAAgB,CAAC,eAAe,CAAC,iBAChC/B,OAAA;kBAAK8E,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAEhD,gBAAgB,CAAC,eAAe;gBAAC;kBAAAiD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CACtE;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAENnF,OAAA;cAAK8E,SAAS,EAAC,UAAU;cAAAC,QAAA,gBACvB/E,OAAA;gBAAK8E,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzB/E,OAAA;kBAAOuF,OAAO,EAAC,SAAS;kBAAAR,QAAA,EAAC;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACzCnF,OAAA;kBAAK8E,SAAS,EAAEF,iBAAiB,CAAC,iBAAiB,CAAE;kBAAAG,QAAA,gBACnD/E,OAAA,CAACL,QAAQ;oBAACmF,SAAS,EAAC;kBAAY;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACnCnF,OAAA;oBACEwF,IAAI,EAAC,MAAM;oBACXC,EAAE,EAAC,SAAS;oBACZ9E,IAAI,EAAC,iBAAiB;oBACtB+B,KAAK,EAAEjC,QAAQ,CAACO,OAAO,CAACI,OAAQ;oBAChCsE,QAAQ,EAAElD,YAAa;oBACvBmD,WAAW,EAAC,gBAAgB;oBAC5BC,QAAQ,EAAErE;kBAAQ;oBAAAyD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,EACLpD,gBAAgB,CAAC,iBAAiB,CAAC,iBAClC/B,OAAA;kBAAK8E,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAEhD,gBAAgB,CAAC,iBAAiB;gBAAC;kBAAAiD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CACxE;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eAENnF,OAAA;gBAAK8E,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzB/E,OAAA;kBAAOuF,OAAO,EAAC,SAAS;kBAAAR,QAAA,EAAC;gBAAO;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACxCnF,OAAA;kBAAK8E,SAAS,EAAEF,iBAAiB,CAAC,iBAAiB,CAAE;kBAAAG,QAAA,gBACnD/E,OAAA,CAACL,QAAQ;oBAACmF,SAAS,EAAC;kBAAY;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACnCnF,OAAA;oBACEwF,IAAI,EAAC,MAAM;oBACXC,EAAE,EAAC,SAAS;oBACZ9E,IAAI,EAAC,iBAAiB;oBACtB+B,KAAK,EAAEjC,QAAQ,CAACO,OAAO,CAACK,OAAQ;oBAChCqE,QAAQ,EAAElD,YAAa;oBACvBmD,WAAW,EAAC,oBAAoB;oBAChCC,QAAQ,EAAErE;kBAAQ;oBAAAyD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,EACLpD,gBAAgB,CAAC,iBAAiB,CAAC,iBAClC/B,OAAA;kBAAK8E,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAEhD,gBAAgB,CAAC,iBAAiB;gBAAC;kBAAAiD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CACxE;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENnF,OAAA;YACEwF,IAAI,EAAC,QAAQ;YACbV,SAAS,EAAC,4BAA4B;YACtCc,QAAQ,EAAErE,OAAQ;YAAAwD,QAAA,EAEjBxD,OAAO,GAAG,qBAAqB,GAAG;UAAgB;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEPnF,OAAA;UAAK8E,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1B/E,OAAA;YAAA+E,QAAA,GAAG,2BAAyB,eAAA/E,OAAA,CAACb,IAAI;cAAC0G,EAAE,EAAC,QAAQ;cAACf,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjF,EAAA,CA7hBID,QAAQ;EAAA,QACKb,WAAW,EACXC,WAAW,EAC4BS,OAAO;AAAA;AAAAgG,EAAA,GAH3D7F,QAAQ;AA+hBd,eAAeA,QAAQ;AAAC,IAAA6F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}