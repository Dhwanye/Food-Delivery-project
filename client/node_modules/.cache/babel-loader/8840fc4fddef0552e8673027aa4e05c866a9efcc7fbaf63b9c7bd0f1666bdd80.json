{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Food Delivery project\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Fetch user data using the token\n      fetchUserData(token);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchUserData = async token => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/me', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('token', data.token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } else {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'An error occurred during login'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('token', data.token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } else {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'An error occurred during registration'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      register,\n      logout,\n      isAuthenticated: !!user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","fetchUserData","response","fetch","headers","Authorization","ok","userData","json","error","console","login","email","password","method","body","JSON","stringify","data","setItem","success","message","register","logout","removeItem","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/HP/Food Delivery project/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Fetch user data using the token\n      fetchUserData(token);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchUserData = async (token) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/me', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('token', data.token);\n        setUser(data.user);\n        return { success: true };\n      } else {\n        const error = await response.json();\n        return { success: false, error: error.message };\n      }\n    } catch (error) {\n      return { success: false, error: 'An error occurred during login' };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('token', data.token);\n        setUser(data.user);\n        return { success: true };\n      } else {\n        const error = await response.json();\n        return { success: false, error: error.message };\n      }\n    } catch (error) {\n      return { success: false, error: 'An error occurred during registration' };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        loading,\n        login,\n        register,\n        logout,\n        isAuthenticated: !!user,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}